/*
SolarWinds Observability REST API

[Rest API Documentation](https://documentation.solarwinds.com/en/success_center/observability/content/api/api-swagger.htm)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package swov1

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EntitiesWebsitesEntityIdGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EntitiesWebsitesEntityIdGet200Response{}

// EntitiesWebsitesEntityIdGet200Response struct for EntitiesWebsitesEntityIdGet200Response
type EntitiesWebsitesEntityIdGet200Response struct {
	Id string `json:"id"`
	Type string `json:"type"`
	// Name of the website, which must be unique within the organization. The website must also not contain any control characters, any white space other than space (U+0020), or any consecutive, leading or trailing spaces. 
	Name string `json:"name"`
	// URL of the website. Must be a valid URL with no leading or trailing white space. Must not contain invalid port number (>65535). 
	Url string `json:"url"`
	AvailabilityCheckSettings NullableWebsiteSchemaAvailabilityCheckSettings `json:"availabilityCheckSettings,omitempty"`
	Rum NullableWebsiteSchemaRum `json:"rum,omitempty"`
	// Timestamp for when the next on-demand check could be executed.  If at \"0\", it means you can execute it anytime. 
	NextOnDemandAvailabilityTime *float32 `json:"nextOnDemandAvailabilityTime,omitempty"`
}

type _EntitiesWebsitesEntityIdGet200Response EntitiesWebsitesEntityIdGet200Response

// NewEntitiesWebsitesEntityIdGet200Response instantiates a new EntitiesWebsitesEntityIdGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEntitiesWebsitesEntityIdGet200Response(id string, type_ string, name string, url string) *EntitiesWebsitesEntityIdGet200Response {
	this := EntitiesWebsitesEntityIdGet200Response{}
	this.Id = id
	this.Type = type_
	this.Name = name
	this.Url = url
	return &this
}

// NewEntitiesWebsitesEntityIdGet200ResponseWithDefaults instantiates a new EntitiesWebsitesEntityIdGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEntitiesWebsitesEntityIdGet200ResponseWithDefaults() *EntitiesWebsitesEntityIdGet200Response {
	this := EntitiesWebsitesEntityIdGet200Response{}
	return &this
}

// GetId returns the Id field value
func (o *EntitiesWebsitesEntityIdGet200Response) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *EntitiesWebsitesEntityIdGet200Response) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *EntitiesWebsitesEntityIdGet200Response) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value
func (o *EntitiesWebsitesEntityIdGet200Response) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *EntitiesWebsitesEntityIdGet200Response) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *EntitiesWebsitesEntityIdGet200Response) SetType(v string) {
	o.Type = v
}

// GetName returns the Name field value
func (o *EntitiesWebsitesEntityIdGet200Response) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *EntitiesWebsitesEntityIdGet200Response) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *EntitiesWebsitesEntityIdGet200Response) SetName(v string) {
	o.Name = v
}

// GetUrl returns the Url field value
func (o *EntitiesWebsitesEntityIdGet200Response) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *EntitiesWebsitesEntityIdGet200Response) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *EntitiesWebsitesEntityIdGet200Response) SetUrl(v string) {
	o.Url = v
}

// GetAvailabilityCheckSettings returns the AvailabilityCheckSettings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EntitiesWebsitesEntityIdGet200Response) GetAvailabilityCheckSettings() WebsiteSchemaAvailabilityCheckSettings {
	if o == nil || IsNil(o.AvailabilityCheckSettings.Get()) {
		var ret WebsiteSchemaAvailabilityCheckSettings
		return ret
	}
	return *o.AvailabilityCheckSettings.Get()
}

// GetAvailabilityCheckSettingsOk returns a tuple with the AvailabilityCheckSettings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EntitiesWebsitesEntityIdGet200Response) GetAvailabilityCheckSettingsOk() (*WebsiteSchemaAvailabilityCheckSettings, bool) {
	if o == nil {
		return nil, false
	}
	return o.AvailabilityCheckSettings.Get(), o.AvailabilityCheckSettings.IsSet()
}

// HasAvailabilityCheckSettings returns a boolean if a field has been set.
func (o *EntitiesWebsitesEntityIdGet200Response) HasAvailabilityCheckSettings() bool {
	if o != nil && o.AvailabilityCheckSettings.IsSet() {
		return true
	}

	return false
}

// SetAvailabilityCheckSettings gets a reference to the given NullableWebsiteSchemaAvailabilityCheckSettings and assigns it to the AvailabilityCheckSettings field.
func (o *EntitiesWebsitesEntityIdGet200Response) SetAvailabilityCheckSettings(v WebsiteSchemaAvailabilityCheckSettings) {
	o.AvailabilityCheckSettings.Set(&v)
}
// SetAvailabilityCheckSettingsNil sets the value for AvailabilityCheckSettings to be an explicit nil
func (o *EntitiesWebsitesEntityIdGet200Response) SetAvailabilityCheckSettingsNil() {
	o.AvailabilityCheckSettings.Set(nil)
}

// UnsetAvailabilityCheckSettings ensures that no value is present for AvailabilityCheckSettings, not even an explicit nil
func (o *EntitiesWebsitesEntityIdGet200Response) UnsetAvailabilityCheckSettings() {
	o.AvailabilityCheckSettings.Unset()
}

// GetRum returns the Rum field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EntitiesWebsitesEntityIdGet200Response) GetRum() WebsiteSchemaRum {
	if o == nil || IsNil(o.Rum.Get()) {
		var ret WebsiteSchemaRum
		return ret
	}
	return *o.Rum.Get()
}

// GetRumOk returns a tuple with the Rum field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EntitiesWebsitesEntityIdGet200Response) GetRumOk() (*WebsiteSchemaRum, bool) {
	if o == nil {
		return nil, false
	}
	return o.Rum.Get(), o.Rum.IsSet()
}

// HasRum returns a boolean if a field has been set.
func (o *EntitiesWebsitesEntityIdGet200Response) HasRum() bool {
	if o != nil && o.Rum.IsSet() {
		return true
	}

	return false
}

// SetRum gets a reference to the given NullableWebsiteSchemaRum and assigns it to the Rum field.
func (o *EntitiesWebsitesEntityIdGet200Response) SetRum(v WebsiteSchemaRum) {
	o.Rum.Set(&v)
}
// SetRumNil sets the value for Rum to be an explicit nil
func (o *EntitiesWebsitesEntityIdGet200Response) SetRumNil() {
	o.Rum.Set(nil)
}

// UnsetRum ensures that no value is present for Rum, not even an explicit nil
func (o *EntitiesWebsitesEntityIdGet200Response) UnsetRum() {
	o.Rum.Unset()
}

// GetNextOnDemandAvailabilityTime returns the NextOnDemandAvailabilityTime field value if set, zero value otherwise.
func (o *EntitiesWebsitesEntityIdGet200Response) GetNextOnDemandAvailabilityTime() float32 {
	if o == nil || IsNil(o.NextOnDemandAvailabilityTime) {
		var ret float32
		return ret
	}
	return *o.NextOnDemandAvailabilityTime
}

// GetNextOnDemandAvailabilityTimeOk returns a tuple with the NextOnDemandAvailabilityTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EntitiesWebsitesEntityIdGet200Response) GetNextOnDemandAvailabilityTimeOk() (*float32, bool) {
	if o == nil || IsNil(o.NextOnDemandAvailabilityTime) {
		return nil, false
	}
	return o.NextOnDemandAvailabilityTime, true
}

// HasNextOnDemandAvailabilityTime returns a boolean if a field has been set.
func (o *EntitiesWebsitesEntityIdGet200Response) HasNextOnDemandAvailabilityTime() bool {
	if o != nil && !IsNil(o.NextOnDemandAvailabilityTime) {
		return true
	}

	return false
}

// SetNextOnDemandAvailabilityTime gets a reference to the given float32 and assigns it to the NextOnDemandAvailabilityTime field.
func (o *EntitiesWebsitesEntityIdGet200Response) SetNextOnDemandAvailabilityTime(v float32) {
	o.NextOnDemandAvailabilityTime = &v
}

func (o EntitiesWebsitesEntityIdGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EntitiesWebsitesEntityIdGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["type"] = o.Type
	toSerialize["name"] = o.Name
	toSerialize["url"] = o.Url
	if o.AvailabilityCheckSettings.IsSet() {
		toSerialize["availabilityCheckSettings"] = o.AvailabilityCheckSettings.Get()
	}
	if o.Rum.IsSet() {
		toSerialize["rum"] = o.Rum.Get()
	}
	if !IsNil(o.NextOnDemandAvailabilityTime) {
		toSerialize["nextOnDemandAvailabilityTime"] = o.NextOnDemandAvailabilityTime
	}
	return toSerialize, nil
}

func (o *EntitiesWebsitesEntityIdGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"type",
		"name",
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEntitiesWebsitesEntityIdGet200Response := _EntitiesWebsitesEntityIdGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEntitiesWebsitesEntityIdGet200Response)

	if err != nil {
		return err
	}

	*o = EntitiesWebsitesEntityIdGet200Response(varEntitiesWebsitesEntityIdGet200Response)

	return err
}

type NullableEntitiesWebsitesEntityIdGet200Response struct {
	value *EntitiesWebsitesEntityIdGet200Response
	isSet bool
}

func (v NullableEntitiesWebsitesEntityIdGet200Response) Get() *EntitiesWebsitesEntityIdGet200Response {
	return v.value
}

func (v *NullableEntitiesWebsitesEntityIdGet200Response) Set(val *EntitiesWebsitesEntityIdGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableEntitiesWebsitesEntityIdGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableEntitiesWebsitesEntityIdGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEntitiesWebsitesEntityIdGet200Response(val *EntitiesWebsitesEntityIdGet200Response) *NullableEntitiesWebsitesEntityIdGet200Response {
	return &NullableEntitiesWebsitesEntityIdGet200Response{value: val, isSet: true}
}

func (v NullableEntitiesWebsitesEntityIdGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEntitiesWebsitesEntityIdGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



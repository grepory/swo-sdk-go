/*
SolarWinds Observability REST API

[Rest API Documentation](https://documentation.solarwinds.com/en/success_center/observability/content/api/api-swagger.htm)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package swov1

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WebsiteSchemaRum type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebsiteSchemaRum{}

// WebsiteSchemaRum Use this field to configure real user monitoring (RUM) for the website.  You are required to configure at least availability monitoring or real user monitoring to be able to create website. 
type WebsiteSchemaRum struct {
	ApdexTimeInSeconds *int32 `json:"apdexTimeInSeconds,omitempty"`
	Snippet *string `json:"snippet,omitempty"`
	Spa bool `json:"spa"`
}

type _WebsiteSchemaRum WebsiteSchemaRum

// NewWebsiteSchemaRum instantiates a new WebsiteSchemaRum object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebsiteSchemaRum(spa bool) *WebsiteSchemaRum {
	this := WebsiteSchemaRum{}
	this.Spa = spa
	return &this
}

// NewWebsiteSchemaRumWithDefaults instantiates a new WebsiteSchemaRum object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebsiteSchemaRumWithDefaults() *WebsiteSchemaRum {
	this := WebsiteSchemaRum{}
	return &this
}

// GetApdexTimeInSeconds returns the ApdexTimeInSeconds field value if set, zero value otherwise.
func (o *WebsiteSchemaRum) GetApdexTimeInSeconds() int32 {
	if o == nil || IsNil(o.ApdexTimeInSeconds) {
		var ret int32
		return ret
	}
	return *o.ApdexTimeInSeconds
}

// GetApdexTimeInSecondsOk returns a tuple with the ApdexTimeInSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebsiteSchemaRum) GetApdexTimeInSecondsOk() (*int32, bool) {
	if o == nil || IsNil(o.ApdexTimeInSeconds) {
		return nil, false
	}
	return o.ApdexTimeInSeconds, true
}

// HasApdexTimeInSeconds returns a boolean if a field has been set.
func (o *WebsiteSchemaRum) HasApdexTimeInSeconds() bool {
	if o != nil && !IsNil(o.ApdexTimeInSeconds) {
		return true
	}

	return false
}

// SetApdexTimeInSeconds gets a reference to the given int32 and assigns it to the ApdexTimeInSeconds field.
func (o *WebsiteSchemaRum) SetApdexTimeInSeconds(v int32) {
	o.ApdexTimeInSeconds = &v
}

// GetSnippet returns the Snippet field value if set, zero value otherwise.
func (o *WebsiteSchemaRum) GetSnippet() string {
	if o == nil || IsNil(o.Snippet) {
		var ret string
		return ret
	}
	return *o.Snippet
}

// GetSnippetOk returns a tuple with the Snippet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebsiteSchemaRum) GetSnippetOk() (*string, bool) {
	if o == nil || IsNil(o.Snippet) {
		return nil, false
	}
	return o.Snippet, true
}

// HasSnippet returns a boolean if a field has been set.
func (o *WebsiteSchemaRum) HasSnippet() bool {
	if o != nil && !IsNil(o.Snippet) {
		return true
	}

	return false
}

// SetSnippet gets a reference to the given string and assigns it to the Snippet field.
func (o *WebsiteSchemaRum) SetSnippet(v string) {
	o.Snippet = &v
}

// GetSpa returns the Spa field value
func (o *WebsiteSchemaRum) GetSpa() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Spa
}

// GetSpaOk returns a tuple with the Spa field value
// and a boolean to check if the value has been set.
func (o *WebsiteSchemaRum) GetSpaOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Spa, true
}

// SetSpa sets field value
func (o *WebsiteSchemaRum) SetSpa(v bool) {
	o.Spa = v
}

func (o WebsiteSchemaRum) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebsiteSchemaRum) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApdexTimeInSeconds) {
		toSerialize["apdexTimeInSeconds"] = o.ApdexTimeInSeconds
	}
	if !IsNil(o.Snippet) {
		toSerialize["snippet"] = o.Snippet
	}
	toSerialize["spa"] = o.Spa
	return toSerialize, nil
}

func (o *WebsiteSchemaRum) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"spa",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebsiteSchemaRum := _WebsiteSchemaRum{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebsiteSchemaRum)

	if err != nil {
		return err
	}

	*o = WebsiteSchemaRum(varWebsiteSchemaRum)

	return err
}

type NullableWebsiteSchemaRum struct {
	value *WebsiteSchemaRum
	isSet bool
}

func (v NullableWebsiteSchemaRum) Get() *WebsiteSchemaRum {
	return v.value
}

func (v *NullableWebsiteSchemaRum) Set(val *WebsiteSchemaRum) {
	v.value = val
	v.isSet = true
}

func (v NullableWebsiteSchemaRum) IsSet() bool {
	return v.isSet
}

func (v *NullableWebsiteSchemaRum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebsiteSchemaRum(val *WebsiteSchemaRum) *NullableWebsiteSchemaRum {
	return &NullableWebsiteSchemaRum{value: val, isSet: true}
}

func (v NullableWebsiteSchemaRum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebsiteSchemaRum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



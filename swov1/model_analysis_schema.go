/*
SolarWinds Observability REST API

[Rest API Documentation](https://documentation.solarwinds.com/en/success_center/observability/content/api/api-swagger.htm)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package swov1

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AnalysisSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AnalysisSchema{}

// AnalysisSchema struct for AnalysisSchema
type AnalysisSchema struct {
	DurationInMs int32 `json:"durationInMs"`
	ErrorMessage *string `json:"errorMessage,omitempty"`
	AnalysisId string `json:"analysisId"`
	ResolveIp *AnalysisSchemaAllOfResolveIp `json:"resolveIp,omitempty"`
	Connection *AnalysisSchemaAllOfConnection `json:"connection,omitempty"`
	Message *AnalysisSchemaAllOfMessage `json:"message,omitempty"`
	Output *AnalysisSchemaAllOfOutput `json:"output,omitempty"`
	Traceroute *AnalysisSchemaAllOfTraceroute `json:"traceroute,omitempty"`
	Redirects []AnalysisSchemaAllOfRedirects `json:"redirects,omitempty"`
}

type _AnalysisSchema AnalysisSchema

// NewAnalysisSchema instantiates a new AnalysisSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalysisSchema(durationInMs int32, analysisId string) *AnalysisSchema {
	this := AnalysisSchema{}
	this.DurationInMs = durationInMs
	this.AnalysisId = analysisId
	return &this
}

// NewAnalysisSchemaWithDefaults instantiates a new AnalysisSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalysisSchemaWithDefaults() *AnalysisSchema {
	this := AnalysisSchema{}
	return &this
}

// GetDurationInMs returns the DurationInMs field value
func (o *AnalysisSchema) GetDurationInMs() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DurationInMs
}

// GetDurationInMsOk returns a tuple with the DurationInMs field value
// and a boolean to check if the value has been set.
func (o *AnalysisSchema) GetDurationInMsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DurationInMs, true
}

// SetDurationInMs sets field value
func (o *AnalysisSchema) SetDurationInMs(v int32) {
	o.DurationInMs = v
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise.
func (o *AnalysisSchema) GetErrorMessage() string {
	if o == nil || IsNil(o.ErrorMessage) {
		var ret string
		return ret
	}
	return *o.ErrorMessage
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalysisSchema) GetErrorMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorMessage) {
		return nil, false
	}
	return o.ErrorMessage, true
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *AnalysisSchema) HasErrorMessage() bool {
	if o != nil && !IsNil(o.ErrorMessage) {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given string and assigns it to the ErrorMessage field.
func (o *AnalysisSchema) SetErrorMessage(v string) {
	o.ErrorMessage = &v
}

// GetAnalysisId returns the AnalysisId field value
func (o *AnalysisSchema) GetAnalysisId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AnalysisId
}

// GetAnalysisIdOk returns a tuple with the AnalysisId field value
// and a boolean to check if the value has been set.
func (o *AnalysisSchema) GetAnalysisIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnalysisId, true
}

// SetAnalysisId sets field value
func (o *AnalysisSchema) SetAnalysisId(v string) {
	o.AnalysisId = v
}

// GetResolveIp returns the ResolveIp field value if set, zero value otherwise.
func (o *AnalysisSchema) GetResolveIp() AnalysisSchemaAllOfResolveIp {
	if o == nil || IsNil(o.ResolveIp) {
		var ret AnalysisSchemaAllOfResolveIp
		return ret
	}
	return *o.ResolveIp
}

// GetResolveIpOk returns a tuple with the ResolveIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalysisSchema) GetResolveIpOk() (*AnalysisSchemaAllOfResolveIp, bool) {
	if o == nil || IsNil(o.ResolveIp) {
		return nil, false
	}
	return o.ResolveIp, true
}

// HasResolveIp returns a boolean if a field has been set.
func (o *AnalysisSchema) HasResolveIp() bool {
	if o != nil && !IsNil(o.ResolveIp) {
		return true
	}

	return false
}

// SetResolveIp gets a reference to the given AnalysisSchemaAllOfResolveIp and assigns it to the ResolveIp field.
func (o *AnalysisSchema) SetResolveIp(v AnalysisSchemaAllOfResolveIp) {
	o.ResolveIp = &v
}

// GetConnection returns the Connection field value if set, zero value otherwise.
func (o *AnalysisSchema) GetConnection() AnalysisSchemaAllOfConnection {
	if o == nil || IsNil(o.Connection) {
		var ret AnalysisSchemaAllOfConnection
		return ret
	}
	return *o.Connection
}

// GetConnectionOk returns a tuple with the Connection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalysisSchema) GetConnectionOk() (*AnalysisSchemaAllOfConnection, bool) {
	if o == nil || IsNil(o.Connection) {
		return nil, false
	}
	return o.Connection, true
}

// HasConnection returns a boolean if a field has been set.
func (o *AnalysisSchema) HasConnection() bool {
	if o != nil && !IsNil(o.Connection) {
		return true
	}

	return false
}

// SetConnection gets a reference to the given AnalysisSchemaAllOfConnection and assigns it to the Connection field.
func (o *AnalysisSchema) SetConnection(v AnalysisSchemaAllOfConnection) {
	o.Connection = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *AnalysisSchema) GetMessage() AnalysisSchemaAllOfMessage {
	if o == nil || IsNil(o.Message) {
		var ret AnalysisSchemaAllOfMessage
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalysisSchema) GetMessageOk() (*AnalysisSchemaAllOfMessage, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *AnalysisSchema) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given AnalysisSchemaAllOfMessage and assigns it to the Message field.
func (o *AnalysisSchema) SetMessage(v AnalysisSchemaAllOfMessage) {
	o.Message = &v
}

// GetOutput returns the Output field value if set, zero value otherwise.
func (o *AnalysisSchema) GetOutput() AnalysisSchemaAllOfOutput {
	if o == nil || IsNil(o.Output) {
		var ret AnalysisSchemaAllOfOutput
		return ret
	}
	return *o.Output
}

// GetOutputOk returns a tuple with the Output field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalysisSchema) GetOutputOk() (*AnalysisSchemaAllOfOutput, bool) {
	if o == nil || IsNil(o.Output) {
		return nil, false
	}
	return o.Output, true
}

// HasOutput returns a boolean if a field has been set.
func (o *AnalysisSchema) HasOutput() bool {
	if o != nil && !IsNil(o.Output) {
		return true
	}

	return false
}

// SetOutput gets a reference to the given AnalysisSchemaAllOfOutput and assigns it to the Output field.
func (o *AnalysisSchema) SetOutput(v AnalysisSchemaAllOfOutput) {
	o.Output = &v
}

// GetTraceroute returns the Traceroute field value if set, zero value otherwise.
func (o *AnalysisSchema) GetTraceroute() AnalysisSchemaAllOfTraceroute {
	if o == nil || IsNil(o.Traceroute) {
		var ret AnalysisSchemaAllOfTraceroute
		return ret
	}
	return *o.Traceroute
}

// GetTracerouteOk returns a tuple with the Traceroute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalysisSchema) GetTracerouteOk() (*AnalysisSchemaAllOfTraceroute, bool) {
	if o == nil || IsNil(o.Traceroute) {
		return nil, false
	}
	return o.Traceroute, true
}

// HasTraceroute returns a boolean if a field has been set.
func (o *AnalysisSchema) HasTraceroute() bool {
	if o != nil && !IsNil(o.Traceroute) {
		return true
	}

	return false
}

// SetTraceroute gets a reference to the given AnalysisSchemaAllOfTraceroute and assigns it to the Traceroute field.
func (o *AnalysisSchema) SetTraceroute(v AnalysisSchemaAllOfTraceroute) {
	o.Traceroute = &v
}

// GetRedirects returns the Redirects field value if set, zero value otherwise.
func (o *AnalysisSchema) GetRedirects() []AnalysisSchemaAllOfRedirects {
	if o == nil || IsNil(o.Redirects) {
		var ret []AnalysisSchemaAllOfRedirects
		return ret
	}
	return o.Redirects
}

// GetRedirectsOk returns a tuple with the Redirects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalysisSchema) GetRedirectsOk() ([]AnalysisSchemaAllOfRedirects, bool) {
	if o == nil || IsNil(o.Redirects) {
		return nil, false
	}
	return o.Redirects, true
}

// HasRedirects returns a boolean if a field has been set.
func (o *AnalysisSchema) HasRedirects() bool {
	if o != nil && !IsNil(o.Redirects) {
		return true
	}

	return false
}

// SetRedirects gets a reference to the given []AnalysisSchemaAllOfRedirects and assigns it to the Redirects field.
func (o *AnalysisSchema) SetRedirects(v []AnalysisSchemaAllOfRedirects) {
	o.Redirects = v
}

func (o AnalysisSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AnalysisSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["durationInMs"] = o.DurationInMs
	if !IsNil(o.ErrorMessage) {
		toSerialize["errorMessage"] = o.ErrorMessage
	}
	toSerialize["analysisId"] = o.AnalysisId
	if !IsNil(o.ResolveIp) {
		toSerialize["resolveIp"] = o.ResolveIp
	}
	if !IsNil(o.Connection) {
		toSerialize["connection"] = o.Connection
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Output) {
		toSerialize["output"] = o.Output
	}
	if !IsNil(o.Traceroute) {
		toSerialize["traceroute"] = o.Traceroute
	}
	if !IsNil(o.Redirects) {
		toSerialize["redirects"] = o.Redirects
	}
	return toSerialize, nil
}

func (o *AnalysisSchema) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"durationInMs",
		"analysisId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAnalysisSchema := _AnalysisSchema{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAnalysisSchema)

	if err != nil {
		return err
	}

	*o = AnalysisSchema(varAnalysisSchema)

	return err
}

type NullableAnalysisSchema struct {
	value *AnalysisSchema
	isSet bool
}

func (v NullableAnalysisSchema) Get() *AnalysisSchema {
	return v.value
}

func (v *NullableAnalysisSchema) Set(val *AnalysisSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalysisSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalysisSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalysisSchema(val *AnalysisSchema) *NullableAnalysisSchema {
	return &NullableAnalysisSchema{value: val, isSet: true}
}

func (v NullableAnalysisSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalysisSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



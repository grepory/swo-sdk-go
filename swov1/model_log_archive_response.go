/*
SolarWinds Observability REST API

[Rest API Documentation](https://documentation.solarwinds.com/en/success_center/observability/content/api/api-swagger.htm)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package swov1

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the LogArchiveResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogArchiveResponse{}

// LogArchiveResponse struct for LogArchiveResponse
type LogArchiveResponse struct {
	// List of archived logs data
	LogArchives []LogArchiveModel `json:"logArchives"`
	PageInfo PageInfoModel `json:"pageInfo"`
}

type _LogArchiveResponse LogArchiveResponse

// NewLogArchiveResponse instantiates a new LogArchiveResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogArchiveResponse(logArchives []LogArchiveModel, pageInfo PageInfoModel) *LogArchiveResponse {
	this := LogArchiveResponse{}
	this.LogArchives = logArchives
	this.PageInfo = pageInfo
	return &this
}

// NewLogArchiveResponseWithDefaults instantiates a new LogArchiveResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogArchiveResponseWithDefaults() *LogArchiveResponse {
	this := LogArchiveResponse{}
	return &this
}

// GetLogArchives returns the LogArchives field value
func (o *LogArchiveResponse) GetLogArchives() []LogArchiveModel {
	if o == nil {
		var ret []LogArchiveModel
		return ret
	}

	return o.LogArchives
}

// GetLogArchivesOk returns a tuple with the LogArchives field value
// and a boolean to check if the value has been set.
func (o *LogArchiveResponse) GetLogArchivesOk() ([]LogArchiveModel, bool) {
	if o == nil {
		return nil, false
	}
	return o.LogArchives, true
}

// SetLogArchives sets field value
func (o *LogArchiveResponse) SetLogArchives(v []LogArchiveModel) {
	o.LogArchives = v
}

// GetPageInfo returns the PageInfo field value
func (o *LogArchiveResponse) GetPageInfo() PageInfoModel {
	if o == nil {
		var ret PageInfoModel
		return ret
	}

	return o.PageInfo
}

// GetPageInfoOk returns a tuple with the PageInfo field value
// and a boolean to check if the value has been set.
func (o *LogArchiveResponse) GetPageInfoOk() (*PageInfoModel, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageInfo, true
}

// SetPageInfo sets field value
func (o *LogArchiveResponse) SetPageInfo(v PageInfoModel) {
	o.PageInfo = v
}

func (o LogArchiveResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogArchiveResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["logArchives"] = o.LogArchives
	toSerialize["pageInfo"] = o.PageInfo
	return toSerialize, nil
}

func (o *LogArchiveResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"logArchives",
		"pageInfo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLogArchiveResponse := _LogArchiveResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLogArchiveResponse)

	if err != nil {
		return err
	}

	*o = LogArchiveResponse(varLogArchiveResponse)

	return err
}

type NullableLogArchiveResponse struct {
	value *LogArchiveResponse
	isSet bool
}

func (v NullableLogArchiveResponse) Get() *LogArchiveResponse {
	return v.value
}

func (v *NullableLogArchiveResponse) Set(val *LogArchiveResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableLogArchiveResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableLogArchiveResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogArchiveResponse(val *LogArchiveResponse) *NullableLogArchiveResponse {
	return &NullableLogArchiveResponse{value: val, isSet: true}
}

func (v NullableLogArchiveResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogArchiveResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
SolarWinds Observability REST API

[Rest API Documentation](https://documentation.solarwinds.com/en/success_center/observability/content/api/api-swagger.htm)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package swov1

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OnDemandCheckSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OnDemandCheckSchema{}

// OnDemandCheckSchema struct for OnDemandCheckSchema
type OnDemandCheckSchema struct {
	Id string `json:"id"`
	// Time when it will be possible to schedule another on-demand check
	NextOnDemandAvailabilityTime *string `json:"nextOnDemandAvailabilityTime,omitempty" validate:"regexp=^\\\\d+$"`
	OnDemandCheckStatus *OnDemandCheckStatus `json:"onDemandCheckStatus,omitempty"`
}

type _OnDemandCheckSchema OnDemandCheckSchema

// NewOnDemandCheckSchema instantiates a new OnDemandCheckSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOnDemandCheckSchema(id string) *OnDemandCheckSchema {
	this := OnDemandCheckSchema{}
	this.Id = id
	return &this
}

// NewOnDemandCheckSchemaWithDefaults instantiates a new OnDemandCheckSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOnDemandCheckSchemaWithDefaults() *OnDemandCheckSchema {
	this := OnDemandCheckSchema{}
	return &this
}

// GetId returns the Id field value
func (o *OnDemandCheckSchema) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OnDemandCheckSchema) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OnDemandCheckSchema) SetId(v string) {
	o.Id = v
}

// GetNextOnDemandAvailabilityTime returns the NextOnDemandAvailabilityTime field value if set, zero value otherwise.
func (o *OnDemandCheckSchema) GetNextOnDemandAvailabilityTime() string {
	if o == nil || IsNil(o.NextOnDemandAvailabilityTime) {
		var ret string
		return ret
	}
	return *o.NextOnDemandAvailabilityTime
}

// GetNextOnDemandAvailabilityTimeOk returns a tuple with the NextOnDemandAvailabilityTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnDemandCheckSchema) GetNextOnDemandAvailabilityTimeOk() (*string, bool) {
	if o == nil || IsNil(o.NextOnDemandAvailabilityTime) {
		return nil, false
	}
	return o.NextOnDemandAvailabilityTime, true
}

// HasNextOnDemandAvailabilityTime returns a boolean if a field has been set.
func (o *OnDemandCheckSchema) HasNextOnDemandAvailabilityTime() bool {
	if o != nil && !IsNil(o.NextOnDemandAvailabilityTime) {
		return true
	}

	return false
}

// SetNextOnDemandAvailabilityTime gets a reference to the given string and assigns it to the NextOnDemandAvailabilityTime field.
func (o *OnDemandCheckSchema) SetNextOnDemandAvailabilityTime(v string) {
	o.NextOnDemandAvailabilityTime = &v
}

// GetOnDemandCheckStatus returns the OnDemandCheckStatus field value if set, zero value otherwise.
func (o *OnDemandCheckSchema) GetOnDemandCheckStatus() OnDemandCheckStatus {
	if o == nil || IsNil(o.OnDemandCheckStatus) {
		var ret OnDemandCheckStatus
		return ret
	}
	return *o.OnDemandCheckStatus
}

// GetOnDemandCheckStatusOk returns a tuple with the OnDemandCheckStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OnDemandCheckSchema) GetOnDemandCheckStatusOk() (*OnDemandCheckStatus, bool) {
	if o == nil || IsNil(o.OnDemandCheckStatus) {
		return nil, false
	}
	return o.OnDemandCheckStatus, true
}

// HasOnDemandCheckStatus returns a boolean if a field has been set.
func (o *OnDemandCheckSchema) HasOnDemandCheckStatus() bool {
	if o != nil && !IsNil(o.OnDemandCheckStatus) {
		return true
	}

	return false
}

// SetOnDemandCheckStatus gets a reference to the given OnDemandCheckStatus and assigns it to the OnDemandCheckStatus field.
func (o *OnDemandCheckSchema) SetOnDemandCheckStatus(v OnDemandCheckStatus) {
	o.OnDemandCheckStatus = &v
}

func (o OnDemandCheckSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OnDemandCheckSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.NextOnDemandAvailabilityTime) {
		toSerialize["nextOnDemandAvailabilityTime"] = o.NextOnDemandAvailabilityTime
	}
	if !IsNil(o.OnDemandCheckStatus) {
		toSerialize["onDemandCheckStatus"] = o.OnDemandCheckStatus
	}
	return toSerialize, nil
}

func (o *OnDemandCheckSchema) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOnDemandCheckSchema := _OnDemandCheckSchema{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOnDemandCheckSchema)

	if err != nil {
		return err
	}

	*o = OnDemandCheckSchema(varOnDemandCheckSchema)

	return err
}

type NullableOnDemandCheckSchema struct {
	value *OnDemandCheckSchema
	isSet bool
}

func (v NullableOnDemandCheckSchema) Get() *OnDemandCheckSchema {
	return v.value
}

func (v *NullableOnDemandCheckSchema) Set(val *OnDemandCheckSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableOnDemandCheckSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableOnDemandCheckSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOnDemandCheckSchema(val *OnDemandCheckSchema) *NullableOnDemandCheckSchema {
	return &NullableOnDemandCheckSchema{value: val, isSet: true}
}

func (v NullableOnDemandCheckSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOnDemandCheckSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



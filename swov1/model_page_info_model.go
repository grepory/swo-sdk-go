/*
SolarWinds Observability REST API

[Rest API Documentation](https://documentation.solarwinds.com/en/success_center/observability/content/api/api-swagger.htm)

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package swov1

import (
	"encoding/json"
)

// checks if the PageInfoModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PageInfoModel{}

// PageInfoModel Pagination
type PageInfoModel struct {
	NextPage *string `json:"nextPage,omitempty"`
}

// NewPageInfoModel instantiates a new PageInfoModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPageInfoModel() *PageInfoModel {
	this := PageInfoModel{}
	return &this
}

// NewPageInfoModelWithDefaults instantiates a new PageInfoModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageInfoModelWithDefaults() *PageInfoModel {
	this := PageInfoModel{}
	return &this
}

// GetNextPage returns the NextPage field value if set, zero value otherwise.
func (o *PageInfoModel) GetNextPage() string {
	if o == nil || IsNil(o.NextPage) {
		var ret string
		return ret
	}
	return *o.NextPage
}

// GetNextPageOk returns a tuple with the NextPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageInfoModel) GetNextPageOk() (*string, bool) {
	if o == nil || IsNil(o.NextPage) {
		return nil, false
	}
	return o.NextPage, true
}

// HasNextPage returns a boolean if a field has been set.
func (o *PageInfoModel) HasNextPage() bool {
	if o != nil && !IsNil(o.NextPage) {
		return true
	}

	return false
}

// SetNextPage gets a reference to the given string and assigns it to the NextPage field.
func (o *PageInfoModel) SetNextPage(v string) {
	o.NextPage = &v
}

func (o PageInfoModel) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PageInfoModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NextPage) {
		toSerialize["nextPage"] = o.NextPage
	}
	return toSerialize, nil
}

type NullablePageInfoModel struct {
	value *PageInfoModel
	isSet bool
}

func (v NullablePageInfoModel) Get() *PageInfoModel {
	return v.value
}

func (v *NullablePageInfoModel) Set(val *PageInfoModel) {
	v.value = val
	v.isSet = true
}

func (v NullablePageInfoModel) IsSet() bool {
	return v.isSet
}

func (v *NullablePageInfoModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePageInfoModel(val *PageInfoModel) *NullablePageInfoModel {
	return &NullablePageInfoModel{value: val, isSet: true}
}

func (v NullablePageInfoModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePageInfoModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


